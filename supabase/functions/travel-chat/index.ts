import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { message } = await req.json();
    
    if (!message) {
      throw new Error('Message is required');
    }

    console.log(`Processing travel chat request: ${message}`);

    const systemPrompt = `Eres un asistente experto en turismo y viajes. Tu trabajo es ayudar a los usuarios con:

üåç **Recomendaciones de destinos**
- Mejores lugares para visitar seg√∫n intereses y presupuesto
- Destinos menos conocidos pero incre√≠bles
- Comparaci√≥n entre diferentes opciones

‚úàÔ∏è **Informaci√≥n sobre vuelos y hoteles**  
- Aerol√≠neas recomendadas para cada destino
- Mejores zonas para alojarse
- Tips para encontrar mejores precios
- Temporadas altas y bajas

üéí **Consejos de viaje**
- Qu√© empacar seg√∫n el destino y √©poca
- Consejos de seguridad
- C√≥mo moverse en cada ciudad/pa√≠s
- Apps √∫tiles para viajar

üèõÔ∏è **Actividades y atracciones tur√≠sticas**
- Lugares imperdibles en cada destino
- Actividades seg√∫n intereses (aventura, cultura, gastronom√≠a, etc.)
- Tours recomendados
- Experiencias locales aut√©nticas

üí∞ **Presupuestos de viaje**
- Estimaciones de costos por persona/d√≠a
- Tips para viajar econ√≥mico
- Cu√°ndo es m√°s barato viajar
- C√≥mo ahorrar en vuelos, hoteles y actividades

üìã **Documentaci√≥n necesaria para viajar**
- Requisitos de visa seg√∫n nacionalidad
- Documentos necesarios
- Vacunas requeridas
- Seguros de viaje recomendados

üå§Ô∏è **Mejor √©poca para viajar**
- Clima ideal seg√∫n el destino
- Temporadas de lluvia/sequ√≠a
- Eventos especiales y festivales
- Cu√°ndo evitar multitudes

üçΩÔ∏è **Cultura y gastronom√≠a local**
- Platos t√≠picos que debes probar
- Costumbres locales importantes
- Etiqueta y protocolo
- Frases √∫tiles en el idioma local

Responde de manera √∫til, amigable y profesional. Usa formato Markdown para organizar bien la informaci√≥n con emojis y secciones claras. S√© espec√≠fico y da consejos pr√°cticos.

Si te preguntan sobre b√∫squedas espec√≠ficas de vuelos o hoteles con fechas exactas, explica que el sistema de reservas est√° temporalmente en mantenimiento, pero puedes dar consejos generales sobre el destino, aerol√≠neas recomendadas, zonas de alojamiento, mejor √©poca para viajar, etc.`;

    const openAIApiKey = Deno.env.get('OPENAI_API_KEY');
    if (!openAIApiKey) {
      throw new Error('OpenAI API key not configured');
    }

    const openAIResponse = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${openAIApiKey}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-4o-mini',
        messages: [
          { role: 'system', content: systemPrompt },
          { role: 'user', content: message }
        ],
        max_tokens: 1500,
        temperature: 0.7,
      }),
    });

    if (!openAIResponse.ok) {
      const errorText = await openAIResponse.text();
      console.error('OpenAI API error:', errorText);
      throw new Error(`OpenAI API error: ${openAIResponse.status}`);
    }

    const openAIData = await openAIResponse.json();
    const aiResponse = openAIData.choices[0].message.content;

    console.log('Generated AI response successfully');

    return new Response(JSON.stringify({ 
      message: aiResponse
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });

  } catch (error) {
    console.error('Error in travel-chat function:', error);
    return new Response(JSON.stringify({ 
      error: error.message,
      message: "Lo siento, ha ocurrido un error. Por favor, int√©ntalo de nuevo." 
    }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
});